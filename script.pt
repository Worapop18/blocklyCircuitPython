// ---------- Workspace Setup ----------
const workspace = Blockly.inject('blocklyDiv', {
  toolbox: document.getElementById('toolbox'),
  trashcan: true,
  zoom: { controls: true, wheel: true },
});

// ---------- Define Custom Blocks ----------
Blockly.defineBlocksWithJsonArray([
  { "type": "start_code", "message0": "‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°", "nextStatement": null, "colour": 120, "tooltip": "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° CircuitPython" },
  { "type": "led_on", "message0": "‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü LED", "previousStatement": null, "nextStatement": null, "colour": 290 },
  { "type": "led_off", "message0": "‡∏õ‡∏¥‡∏î‡πÑ‡∏ü LED", "previousStatement": null, "nextStatement": null, "colour": 290 },
  { "type": "sleep_block", "message0": "‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ %1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ", "args0":[{"type":"field_number","name":"SECONDS","value":1,"min":0}], "previousStatement": null, "nextStatement": null, "colour": 30 },
  { "type": "button_read", "message0": "‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î (GP14)", "output": "Boolean", "colour": 230 }
]);

// ---------- Auto Update Code (Block as Text) ----------
const codeOutput = document.getElementById("code-output");

function updateCodeDisplay() {
  const allBlocks = workspace.getAllBlocks();
  if(allBlocks.length === 0) {
    codeOutput.textContent = '# ‡∏•‡∏≤‡∏Å‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°';
    return;
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ö‡∏•‡πá‡∏≠‡∏Å
  let codeLines = allBlocks.map(block => {
    let extra = '';
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ field ‡πÄ‡∏ä‡πà‡∏ô SECONDS ‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏≤‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á
    if(block.getFieldValue('SECONDS') !== null) {
      extra = ` (${block.getFieldValue('SECONDS')} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)`;
    }
    return `# [${block.type}]${extra}`;
  });

  codeOutput.textContent = codeLines.join('\n');
}

workspace.addChangeListener(updateCodeDisplay);
updateCodeDisplay();

// ---------- Buttons ----------
document.getElementById("clearBtn").onclick = () => { workspace.clear(); updateCodeDisplay(); };
document.getElementById("exportBtn").onclick = () => { navigator.clipboard.writeText(codeOutput.textContent); alert("‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏õ clipboard ‡πÅ‡∏•‡πâ‡∏ß!"); };
document.getElementById("runBtn").onclick = () => {
  const result = document.getElementById("runResult");
  const code = codeOutput.textContent;
  result.textContent = code.trim() === '' || code.startsWith('#') ? '‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô' : 'üöÄ (‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≥‡∏•‡∏≠‡∏á)\n\n' + code;
};
